{"version":3,"sources":["components/statictics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/App.js","index.js","components/statictics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.module.css","components/section/Section.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styled","statistic","positive","FeedbackOptions","options","onLeaveFeedback","styles","type","name","onClick","Section","title","children","section","Notification","message","style","textAlign","fontSize","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAwBeA,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAChD,OACC,gCACC,oBAAGC,UAAWC,IAAOC,UAArB,mBAAuCP,KACvC,oBAAGK,UAAWC,IAAOC,UAArB,sBAA0CN,KAC1C,oBAAGI,UAAWC,IAAOC,UAArB,kBAAsCL,KACtC,oBAAGG,UAAWC,IAAOH,MAArB,oBAAoCA,KACpC,oBAAGE,UAAWC,IAAOE,SAArB,gCAAmDJ,EAAnD,Y,gBCcYK,EArBS,SAAC,GAAiC,EAA/BC,QAAgC,IAAvBC,EAAsB,EAAtBA,gBACnC,OACC,sBAAKN,UAAWO,IAAOF,QAAvB,UACE,wBAAQG,KAAK,SAASC,KAAK,OAAOC,QAASJ,EAA3C,kBAGA,wBAAQE,KAAK,SAASC,KAAK,UAAWC,QAASJ,EAA/C,qBAIA,wBAAQE,KAAK,SAASC,KAAK,MAAMC,QAASJ,EAA1C,qB,gBCEWK,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,sBAAKb,UAAWO,IAAOO,QAAvB,UACC,6BAAKF,IACL,8BAAMC,QCKME,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,mCACC,mBAAGC,MAAQ,CAACC,UAAW,SAAUC,SAAS,QAA1C,SAAoDH,OCAlCI,E,4MACpBC,MAAQ,CACP1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGNyB,mBAAqB,WAAO,IAAD,EACK,EAAKD,MAEpC,OAH0B,EAClB1B,KADkB,EACZC,QADY,EACHC,K,EAKxB0B,gCAAkC,WACjC,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAd1B,KAC0B6B,EAClC,OAAOE,KAAKC,MAAMF,I,EAGnBnB,gBAAkB,SAACsB,GAClB,IAAMnB,EAAOmB,EAAEC,OAAOpB,KACtB,EAAKqB,UAAS,SAACC,GAAD,sBACZtB,EAAOsB,EAAUtB,GAAQ,O,uDAGlB,IAAD,EACuBuB,KAAKX,MAA5B1B,EADA,EACAA,KAAMC,EADN,EACMA,QAASC,EADf,EACeA,IACjBC,EAAQkC,KAAKV,qBACbvB,EAAqBiC,KAAKT,kCAEjBU,OAAOC,KAAKF,KAAKX,OAChC,OACC,qCACC,cAAC,EAAD,CAAST,MAAM,wBAAf,SACY,cAAC,EAAD,CAAiBP,QAAS2B,KAAKX,MAAOf,gBAAiB0B,KAAK1B,oBAG7D,IAAVR,EACA,cAAC,EAAD,CAAckB,QAAQ,sBAEtB,cAAC,EAAD,CAASJ,MAAM,aAAf,SACC,cAAC,EAAD,CACCjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA/CMoC,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,8BAA8B,MAAQ,0BAA0B,SAAW,+B,kBCAzGD,EAAOC,QAAU,CAAC,QAAU,mC,kBCA5BD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.3fc75b17.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from './Statistics.module.css'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n\treturn (\r\n\t\t<div >\r\n\t\t\t<p className={styled.statistic}>Good: {good}</p>\r\n\t\t\t<p className={styled.statistic}>Neutral: {neutral}</p>\r\n\t\t\t<p className={styled.statistic}>Bad: {bad}</p>\r\n\t\t\t<p className={styled.total}>Total: {total}</p>\r\n\t\t\t<p className={styled.positive}>Positive feedback: {positivePercentage} %</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nStatistics.propTypes = {\r\n\tgood: PropTypes.number.isRequired,\r\n\tneutral: PropTypes.number.isRequired,\r\n\tbad: PropTypes.number.isRequired,\r\n\ttotal: PropTypes.number.isRequired,\r\n\tpositivePercentage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\treturn (\r\n\t\t<div className={styles.options} >\r\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" name=\"neutral\"  onClick={onLeaveFeedback}\r\n    >\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n\t);\r\n};\r\nFeedbackOptions.propTypes = {\r\n\toptions: PropTypes.array.isRequired,\r\n\tonLeaveFeedback: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<div className={styles.section}>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<div>{children}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p style= {{textAlign: 'center', fontSize:'28px'}}>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import React, { Component } from 'react';\r\nimport Statistics from './statictics/Statistics';\r\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\r\nimport Section from './section/Section';\r\nimport Notification from './notification/Notification';\r\n\r\nexport default class App extends Component {\r\n\tstate = {\r\n\t\tgood: 0,\r\n\t\tneutral: 0,\r\n\t\tbad: 0\r\n\t};\r\n\r\n\tcountTotalFeedback = () => {\r\n\t\tconst { good, neutral, bad } = this.state;\r\n\t\tconst result = good + neutral + bad;\r\n\t\treturn result;\r\n\t};\r\n\r\n\tcountPositiveFeedbackPercentage = () => {\r\n\t\tconst result = this.countTotalFeedback();\r\n\t\tconst { good } = this.state;\r\n\t\tconst percentage = (good * 100) / result;\r\n\t\treturn Math.round(percentage);\r\n\t};\r\n\r\n\tonLeaveFeedback = (e) => {\r\n\t\tconst name = e.target.name;\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\t[name]: prevState[name] + 1\r\n\t\t}));\r\n\t};\r\n\trender() {\r\n\t\tconst { good, neutral, bad } = this.state;\r\n\t\tconst total = this.countTotalFeedback();\r\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n\t\tconst objKey = Object.keys(this.state);\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Section title=\"Please leave feedback\">\r\n                <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback} />\r\n\t\t\t\t</Section>\r\n\r\n\t\t\t\t{total === 0 ? (\r\n\t\t\t\t\t<Notification message=\"No feedback given\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Section title=\"Statistics\">\r\n\t\t\t\t\t\t<Statistics\r\n\t\t\t\t\t\t\tgood={good}\r\n\t\t\t\t\t\t\tneutral={neutral}\r\n\t\t\t\t\t\t\tbad={bad}\r\n\t\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistics_statistic__1OlcQ\",\"total\":\"Statistics_total__2nCw9\",\"positive\":\"Statistics_positive__XrxBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__2Xqtb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1wiwG\"};"],"sourceRoot":""}